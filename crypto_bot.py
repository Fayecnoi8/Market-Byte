import requests
import os
import sys
import datetime

# --- [1] ุงูุฅุนุฏุงุฏุงุช ูุงูููุงุชูุญ ุงูุณุฑูุฉ ---
try:
    BOT_TOKEN = os.environ['BOT_TOKEN']
    CHANNEL_USERNAME = os.environ['CHANNEL_USERNAME'] # ูุฌุจ ุฃู ูุจุฏุฃ ุจู @
except KeyError as e:
    print(f"!!! ุฎุทุฃ: ูุชุบูุฑ ุงูุจูุฆุฉ ุงูุฃุณุงุณู ุบูุฑ ููุฌูุฏ: {e}")
    sys.exit(1)

TELEGRAM_API_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"
# (ูุณุชุฎุฏู CoinGecko API ุงููุฌุงูู 100% - ูุง ูุญุชุงุฌ ููุชุงุญ)
COINGECKO_API_URL = "https://api.coingecko.com/api/v3"

# --- [2] ุงูุฏูุงู ุงููุณุงุนุฏุฉ (ููุท ุฅุฑุณุงู ุงููุต) ---

def post_text_to_telegram(text_content):
    """
    (ุขููุฉ) ุฅุฑุณุงู ุฑุณุงูุฉ ูุตูุฉ (ููุชูุฑูุฑ)
    """
    print(f"... ุฌุงุฑู ุฅุฑุณุงู (ุงูุชูุฑูุฑ) ุฅูู {CHANNEL_USERNAME} ...")
    url = f"{TELEGRAM_API_URL}/sendMessage"
    payload = { 
        'chat_id': CHANNEL_USERNAME, 
        'text': text_content, 
        'parse_mode': 'HTML' # ุณูุณุชุฎุฏู HTML ููุง ูุชูููุฒ ุงูุฃููุงู
    }
    try:
        response = requests.post(url, json=payload, timeout=60)
        response.raise_for_status()
        print(">>> ุชู ุฅุฑุณุงู (ุงูุชูุฑูุฑ) ุจูุฌุงุญ!")
    except requests.exceptions.RequestException as e:
        print(f"!!! ูุดู ุฅุฑุณุงู (ุงูุชูุฑูุฑ): {e} - {getattr(response, 'text', 'ูุง ููุฌุฏ ุฑุฏ')}")
        sys.exit(1) # ุฅููุงู ุงูุชุดุบูู ุจูุดู ุฅุฐุง ูู ูุชููู ูู ุงูุฅุฑุณุงู

# --- [3] ุฏูุงู "ุงูููุงู" (ุฎุทุฉ ุงููุดุฑ ุงููุชููุนุฉ) ---

def format_price(price):
    """ุชูุณูู ุงูุณุนุฑ ุจุดูู ุฌููู (ูุซู $0.001234 ุฃู $65,123.50)"""
    if price < 1:
        return f"${price:.8f}" # ููุนููุงุช ุงูุฑุฎูุตุฉ ุฌุฏุงู
    else:
        return f"${price:,.2f}" # ููุนููุงุช ุงูุบุงููุฉ

def format_change_percent(change):
    """ุชูุณูู ุงูุชุบููุฑ ูุน ุฅุถุงูุฉ ุงูุฑููุฒ ๐ข ๐ด"""
    if change is None:
        return "(N/A)"
    if change >= 0:
        return f"(๐ข +{change:.2f}%)"
    else:
        return f"(๐ด {change:.2f}%)"

# [ุงููููุฉ 1: ุชูุฑูุฑ ุงูุณูู ุงูุนุงู]
def run_market_cap_job():
    print("--- ุจุฏุก ูููุฉ [1. ุชูุฑูุฑ ุงูุณูู ุงูุนุงู (Top 5)] ---")
    try:
        url = f"{COINGECKO_API_URL}/coins/markets"
        params = {
            'vs_currency': 'usd',
            'order': 'market_cap_desc',
            'per_page': 5, # ุฃุนูู 5
            'page': 1,
            'sparkline': 'false'
        }
        response = requests.get(url, params=params, timeout=30)
        response.raise_for_status()
        data = response.json()
        
        report = "๐ **ุชูุฑูุฑ ุงูุณูู (ุฃุนูู 5 ุนููุงุช)**\n\n"
        report += "--- (ุญุณุจ ุงููููุฉ ุงูุณูููุฉ) ---\n\n"
        
        for coin in data:
            name = coin.get('name', 'N/A')
            symbol = coin.get('symbol', '').upper()
            price = format_price(coin.get('current_price', 0))
            change = format_change_percent(coin.get('price_change_percentage_24h'))
            
            report += f"1. **{name} ({symbol}):** {price} {change}\n"
            
        report += f"\n---\n*ุชุงุจุนูุง ูููุฒูุฏ ูู {CHANNEL_USERNAME}*"
        post_text_to_telegram(report)
        
    except Exception as e:
        print(f"!!! ูุดูุช ูููุฉ (ุชูุฑูุฑ ุงูุณูู): {e}")

# [ุงููููุฉ 2: ุฃูุจุฑ ุงูุฑุงุจุญูู]
def run_gainers_job():
    print("--- ุจุฏุก ูููุฉ [2. ุฃูุจุฑ ุงูุฑุงุจุญูู (Top 3)] ---")
    try:
        url = f"{COINGECKO_API_URL}/coins/markets"
        params = {
            'vs_currency': 'usd',
            'order': 'price_change_percentage_24h_desc', # ุงูุชุฑุชูุจ ุญุณุจ "ุฃูุจุฑ ุงูุฑุงุจุญูู"
            'per_page': 3, # ุฃุนูู 3
            'page': 1,
            'sparkline': 'false'
        }
        response = requests.get(url, params=params, timeout=30)
        response.raise_for_status()
        data = response.json()
        
        report = "๐ **ุฃูุจุฑ ุงูุฑุงุจุญูู (ุขุฎุฑ 24 ุณุงุนุฉ)**\n\n"
        
        for coin in data:
            name = coin.get('name', 'N/A')
            symbol = coin.get('symbol', '').upper()
            price = format_price(coin.get('current_price', 0))
            change = format_change_percent(coin.get('price_change_percentage_24h'))
            
            report += f"1. **{name} ({symbol}):** {price} {change}\n"
            
        report += f"\n---\n*ุชุงุจุนูุง ูููุฒูุฏ ูู {CHANNEL_USERNAME}*"
        post_text_to_telegram(report)
        
    except Exception as e:
        print(f"!!! ูุดูุช ูููุฉ (ุฃูุจุฑ ุงูุฑุงุจุญูู): {e}")

# [ุงููููุฉ 3: ุฃูุจุฑ ุงูุฎุงุณุฑูู]
def run_losers_job():
    print("--- ุจุฏุก ูููุฉ [3. ุฃูุจุฑ ุงูุฎุงุณุฑูู (Top 3)] ---")
    try:
        url = f"{COINGECKO_API_URL}/coins/markets"
        params = {
            'vs_currency': 'usd',
            'order': 'price_change_percentage_24h_asc', # ุงูุชุฑุชูุจ ุญุณุจ "ุฃูุจุฑ ุงูุฎุงุณุฑูู"
            'per_page': 3, # ุฃุณูุฃ 3
            'page': 1,
            'sparkline': 'false'
        }
        response = requests.get(url, params=params, timeout=30)
        response.raise_for_status()
        data = response.json()
        
        report = "๐ **ุฃูุจุฑ ุงูุฎุงุณุฑูู (ุขุฎุฑ 24 ุณุงุนุฉ)**\n\n"
        
        for coin in data:
            name = coin.get('name', 'N/A')
            symbol = coin.get('symbol', '').upper()
            price = format_price(coin.get('current_price', 0))
            change = format_change_percent(coin.get('price_change_percentage_24h'))
            
            report += f"1. **{name} ({symbol}):** {price} {change}\n"
            
        report += f"\n---\n*ุชุงุจุนูุง ูููุฒูุฏ ูู {CHANNEL_USERNAME}*"
        post_text_to_telegram(report)
        
    except Exception as e:
        print(f"!!! ูุดูุช ูููุฉ (ุฃูุจุฑ ุงูุฎุงุณุฑูู): {e}")

# --- [4] ุงูุชุดุบูู ุงูุฑุฆูุณู (ุงูุฐูู) ---
def main():
    print("==========================================")
    print(f"ุจุฏุก ุชุดุบูู (v1.0 - ุจูุช Market Byte)...")
    
    # (ุชูููุช ุจุบุฏุงุฏ: 8ุต, 2ุธ, 8ู, 2ุต)
    # (ุจุชูููุช UTC: 5, 11, 17, 23)
    current_hour_utc = datetime.datetime.now(datetime.timezone.utc).hour
    print(f"ุงูุณุงุนุฉ ุงูุญุงููุฉ (UTC): {current_hour_utc}")
    
    job_to_run = None
    
    if current_hour_utc == 5: # 8:00 ุตุจุงุญุงู (ุชูุฑูุฑ ุงูุณูู)
        job_to_run = run_market_cap_job
    elif current_hour_utc == 11: # 2:00 ุธูุฑุงู (ุฃูุจุฑ ุงูุฑุงุจุญูู)
        job_to_run = run_gainers_job
    elif current_hour_utc == 17: # 8:00 ูุณุงุกู (ุฃูุจุฑ ุงูุฎุงุณุฑูู)
        job_to_run = run_losers_job
    elif current_hour_utc == 23: # 2:00 ุตุจุงุญุงู (ุชูุฑูุฑ ุงูุณูู)
        job_to_run = run_market_cap_job
    else:
        # ูุฐุง ููุชุดุบูู ุงููุฏูู (workflow_dispatch)
        print(">>> ููุช ุบูุฑ ูุฌุฏูู (ุชุดุบูู ูุฏูู). ุณูุชู ุชุดุบูู 'ุชูุฑูุฑ ุงูุณูู ุงูุนุงู' ููุงุฎุชุจุงุฑ.")
        job_to_run = run_market_cap_job

    print("==========================================")
    
    if job_to_run:
        job_to_run()
    else:
        print("... ูุง ุชูุฌุฏ ูููุฉ ูุฌุฏููุฉ ููุฐุง ุงูููุช.")

if __name__ == "__main__":
    main()
